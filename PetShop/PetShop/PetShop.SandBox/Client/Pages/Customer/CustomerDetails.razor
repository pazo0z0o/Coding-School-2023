@page "/customerlist/details/{id:int}"
@inject HttpClient httpClient
@inject NavigationManager navigationManager
@inject IJSRuntime jsRuntime
@using PetShop.SandBox.Shared;
@using System.Net.Http.Headers;



@if (isLoading && Customer == null)
{
    <div class="spinner-border text-secondary" role="status"> </div>
}
else
{  //TODO: SOS -> implement the transaction Details table for the customer
    <h3>Customer Details</h3>
    <div class="row">
        <div class="col-md-6">
            <label class="form-label">Name</label>
            <input class="form-control" @bind="@Customer.Name" disabled />
        </div>
        <div class="col-md-6">
            <label class="form-label">Surname</label>
            <input class="form-control" @bind="@Customer.Surname" disabled />
        </div>
        <div class="col-md-6">
            <label class="form-label">Phone</label>
            <input class="form-control" @bind="@Customer.Phone" disabled />
        </div>
        <div class="col-md-6">
            <label class="form-label">TIN</label>
            <input class="form-control" @bind="@Customer.Tin" disabled />
        </div>
    </div>
    <div class="row mt-2">
    </div>
    <button class="btn btn-Danger" @onclick="()=> OnCancel()">Back</button>
    @if (Customer.Transactions != null && Customer.Transactions.Count() > 0)
    {
        <div class="row mt-5">
            <h4 class="col-xs-6"> Customer's Transactions</h4>
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Total Price</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var transaction in Customer.Transactions)
                    {
                        <tr>
                            <td>@transaction.Date</td>
                            <td>@transaction.TotalPrice</td>
                        </tr>
                    }
                </tbody>
    </table>
        </div>
        
        }
}

    @code {
        [Parameter] public int? id { get; set; }
        CustomerDetailsDTO? Customer { get; set; }
        bool isLoading { get; set; } = true;


    protected override async Task OnInitializedAsync()
    {
        if (id != null)
        {
            var temp = await httpClient.GetFromJsonAsync<CustomerDetailsDTO?>($"/customerlist//details/{id}");
            if (temp != null)
            {
                Customer = temp;
            }
        }
        isLoading = false;
    }
    private void OnCancel()
    {
        navigationManager.NavigateTo("customerlist");
    }
}
